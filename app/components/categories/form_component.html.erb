<%= form_for(object) do |f| %>
  <% if object.errors.any? %>
    <div class="alert alert-danger alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <h4><%= pluralize(object.errors.count, "error") %> prohibited this user from being saved:</h4>

      <ul>
        <% object.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <div class="buttons is-centered">
    <%= render(Application::Form::SubmitEntryComponent.new(
        form: f,
        resource: object,
        field_html_options: {
            class: css_book_color
        }
    )) %>
  </div>
  <hr/>
  <%= render(Application::Form::TextEntryComponent.new(
      form: f,
      method: :name,
      resource: object,
      options: {required: true}
  )) %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :categorization_id,
      resource: object,
      choices: Book.all,
      value_method: :id,
      text_method: :to_s,
      group_method: :categorizations,
      group_label_method: :name,
      options: {required: true}
  )) if object.categorization.nil? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :categorization_id,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      options: {required: true}
  )) if object.categorization.present? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :related_tree_category_ids,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      group_method: :categories,
      group_label_method: :name,
      field_html_options: {multiple: true}
  )) if object.categorization.present? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :related_tree_by_category_ids,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      group_method: :categories,
      group_label_method: :name,
      field_html_options: {multiple: true}
  )) if object.categorization.present? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :related_category_ids,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      group_method: :categories,
      group_label_method: :name,
      field_html_options: {multiple: true}
  )) if object.categorization.present? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :related_by_category_ids,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      group_method: :categories,
      group_label_method: :name,
      field_html_options: {multiple: true}
  )) if object.categorization.present? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :suggested_category_ids,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      group_method: :categories,
      group_label_method: :name,
      field_html_options: {multiple: true}
  )) if object.categorization.present? %>
  <%= render(Application::Form::CollectionSelectEntryComponent.new(
      form: f,
      method: :suggested_by_category_ids,
      resource: object,
      choices: object.categorization.book.categorizations.ordered,
      value_method: :id,
      text_method: :to_s,
      group_method: :categories,
      group_label_method: :name,
      field_html_options: {multiple: true}
  )) if object.categorization.present? %>

  <hr/>
  <div class="buttons is-centered">
    <%= render(Application::Form::SubmitEntryComponent.new(
        form: f,
        resource: object,
        field_html_options: {
            class: "is-#{book_color}"
        }
    )) %>
  </div>
<% end %>
