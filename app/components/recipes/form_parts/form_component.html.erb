<%= form_for([object.book, object], url: form_url) do |f| %>
  <% if object.errors.any? %>
    <div class="alert alert-danger alert-dismissable">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
      <h4><%= pluralize(object.errors.count, "error") %> prohibited this user from being saved:</h4>
      <ul>
        <% object.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
      </ul>
    </div>
  <% end %>
  <% case part %>
<% when Recipes::Parts::DetailComponent::PART_RECIPE %>
    <%= render(Recipes::FormParts::GeneralInformationComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_MEDIA %>
    <%= render(Recipes::FormParts::MediaGalleryComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_CLASSIFICATION %>
    <%= render(Recipes::FormParts::ClassificationComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_COMPOSITION %>
    <%= render(Recipes::FormParts::CompositionComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_TIMES %>
    <%= render(Recipes::FormParts::TimesComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_INGREDIENTS %>
    <%= render(Recipes::FormParts::IngredientsComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_DIRECTIONS %>
    <%= render(Recipes::FormParts::DirectionsComponent.new(object: object, form: f)) %>
  <% when Recipes::Parts::DetailComponent::PART_IMPORT %>
    <%= render(Recipes::FormParts::ImportComponent.new(object: object, form: f)) %>
  <% else %>
    <%= render(Recipes::Parts::NoPartComponent.new(object: object)) %>
  <% end %>
  <hr/>
  <div class="buttons is-centered">
    <%= render(Application::FormEntry::SubmitComponent.new(
      form: f,
      resource: object,
      field_html_options: {
        class: css_book_color
      }
    )) %>
  </div>
<% end %>
